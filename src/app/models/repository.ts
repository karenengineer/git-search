import { BaseModel } from './base-model';
import { User } from './user';
import { License } from './license';

export class Repository extends BaseModel {
    public archive_url: string;
    public archived: string;
    public assignees_url: string;
    public blobs_url: string;
    public branches_url: string;
    public clone_url: string;
    public collaborators_url: string;
    public comments_url: string;
    public commits_url: string;
    public compare_url: string;
    public contents_url: string;
    public contributors_url: string;
    public created_at: string;
    public default_branch: string;
    public deployments_url: string;
    public description: string;
    public disabled: boolean;
    public downloads_url: string;
    public events_url: string;
    public fork: boolean;
    public forks: number;
    public forks_count: number;
    public forks_url: string;
    public full_name: string;
    public git_commits_url: string;
    public git_refs_url: string;
    public git_tags_url: string;
    public git_url: string;
    public has_downloads: boolean;
    public has_issues: boolean;
    public has_pages: boolean;
    public has_projects: boolean;
    public has_wiki: boolean;
    public homepage: string;
    public hooks_url: string;
    public html_url: string;
    public id: number;
    public issue_comment_url: string;
    public issue_events_url: string;
    public issues_url: string;
    public keys_url: string;
    public labels_url: string;
    public language: string;
    public languages_url: string;
    public license: License;
    public merges_url: string;
    public milestones_url: string;
    public mirror_url: null
    public name: string;
    public node_id: string;
    public notifications_url: string;
    public open_issues: number;
    public open_issues_count: number;
    public owner: User;
    public pulls_url: string;
    public pushed_at: string;
    public releases_url: string;
    public score:number;
    public size: number;
    public ssh_url: string;
    public stargazers_count: number;
    public stargazers_url: string;
    public statuses_url: string;
    public subscribers_url: string;
    public subscription_url: string;
    public svn_url: string;
    public tags_url: string;
    public teams_url: string;
    public trees_url: string;
    public updated_at: string;
    public url: string;
    public watchers: number;
    public watchers_count: number;

    constructor(data: any = {}) {
        super();

        this.owner = data.owner && User.transform(data.owner)
        this.archive_url = data.archive_url;
        this.archived = data.archived;
        this.assignees_url = data.assignees_url;
        this.blobs_url = data.blobs_url;
        this.branches_url = data.branches_url;
        this.clone_url = data.clone_url;
        this.collaborators_url = data.collaborators_url;
        this.comments_url = data.comments_url;
        this.commits_url = data.commits_url;
        this.compare_url = data.compare_url;
        this.contents_url = data.contents_url;
        this.contributors_url = data.contributors_url;
        this.created_at = data.created_at;
        this.default_branch = data.default_branch;
        this.deployments_url = data.deployments_url;
        this.description = data.description;
        this.disabled = data.disabled;
        this.downloads_url = data.downloads_url;
        this.events_url = data.events_url;
        this.fork = data.fork;
        this.forks = data.forks;
        this.forks_count = data.forks_count;
        this.forks_url = data.forks_url;
        this.full_name = data.full_name;
        this.git_commits_url = data.git_commits_url;
        this.git_refs_url = data.git_refs_url;
        this.git_tags_url = data.git_tags_url;
        this.git_url = data.git_url;
        this.has_downloads = data.has_downloads;
        this.has_issues = data.has_issues;
        this.has_pages = data.has_pages;
        this.has_projects = data.has_projects;
        this.has_wiki = data.has_wiki;
        this.homepage = data.homepage;
        this.hooks_url = data.hooks_url;
        this.html_url = data.html_url;
        this.id = data.id;
        this.issue_comment_url = data.issue_comment_url;
        this.issue_events_url = data.issue_events_url;
        this.issues_url = data.issues_url;
        this.keys_url = data.keys_url;
        this.labels_url = data.labels_url;
        this.language = data.language;
        this.languages_url = data.languages_url;
        this.license = data.license && License.transform(data.license);
        this.merges_url = data.merges_url;
        this.milestones_url = data.milestones_url;
        this.mirror_url = data.mirror_url;
        this.name = data.name;
        this.node_id = data.node_id;
        this.notifications_url = data.notifications_url;
        this.open_issues = data.open_issues;
        this.open_issues_count = data.open_issues_count;
        this.pulls_url = data.pulls_url;
        this.pushed_at = data.pushed_at;
        this.releases_url = data.releases_url;
        this.score = data.score;
        this.size = data.size;
        this.ssh_url = data.ssh_url;
        this.stargazers_count = data.stargazers_count;
        this.stargazers_url = data.stargazers_url;
        this.statuses_url = data.statuses_url;
        this.subscribers_url = data.subscribers_url;
        this.subscription_url = data.subscription_url;
        this.svn_url = data.svn_url;
        this.tags_url = data.tags_url;
        this.teams_url = data.teams_url;
        this.trees_url = data.trees_url;
        this.updated_at = data.updated_at;
        this.url = data.url;
        this.watchers = data.watchers;
        this.watchers_count = data.watchers_count;
    }

    public static transform(data: any): Repository {
        return new Repository(data);
    }
}
